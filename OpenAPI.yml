openapi: '3.0.2'
info:
  title: Recipe Webapp
  version: '1.0'
servers:
  - url: TBD
paths:
  /auth/login:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: besterdavid01@gmail.com
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example:
                      $ref: '#/components/examples/idExample'
                  token:
                    type: string
                    description: JWT Token
                    example:
                      $ref: '#/components/examples/tokenExample'
  /auth/register:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User's ID generated by the database
                    example:
                      $ref: '#/components/examples/idExample'
                  token:
                    type: string
                    description: JWT Token
                    example:
                      $ref: '#/components/examples/tokenExample'
  /auth/user:
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User's ID generated by the database
                    example:
                      $ref: '#/components/examples/idExample'
                  token:
                    type: string
                    description: JWT Token
  /api/recipes:
    get:
      responses:
        '200':
          description: List of recipes
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 507f1f77bcf86cd799439011
                        title:
                          type: string
                          example: Lasagna
                        image:
                          type: string
                          example: https://picsum.photos/200
                        date:
                          type: string
                          format: date
                          example: 2022-02-28
                        author:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 507f1f77bcf86cd799439011
                            name:
                              type: string
                              example: David Bester
                            image:
                              type: string
                              example: https://picsum.photos/200
                        difficulty:
                          type: string
                          enum: [very hard, hard, medium, easy, very easy]
                          example: medium
                        estimatedTime:
                          type: integer
                          example: 129
                          description: Estimated time to cook the meal in minutes.
                        rating:
                          type: number
                          format: float
                          example: 4.5
                          maximum: 5
                          minimum: 0
                        serves:
                          type: number
                          format: float
                          example: 6
                          minimum: 1
                        userRatings:
                          type: object
                          properties:
                            rating:
                              type: integer
                              maximum: 5
                              minimum: 0
                              example: 4
                            difficulty:
                              type: string
                              enum: [very hard, hard, medium, easy, very easy]
                              example: medium
                            time:
                              type: integer
                              minimum: 0
                              example: 123
                            serves:
                              type: integer
                              minimum: 0
                              example: 4
                            badges:
                              $ref: '#/components/schemas/Badges'
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 40
                      next:
                        type: string
                        example: 84fd6ff68b5c11ecf86f8692
                      previous:
                        type: string
                        example: 0242ac120002f1f77bcf8612
                      current:
                        type: string
                        example: 507f1f77bcf86cd799439011
    post:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'

      parameters:
        - in: path
          required: true
          name: recipe
          schema:
            type: object
            properties:
              title:
                type: string
                example: Lasagna
              image:
                type: string
                example: https://picsum.photos/200
              date:
                type: string
                format: date
                example: 2022-02-28
              difficulty:
                type: string
                enum: [very hard, hard, medium, easy, very easy]
                example: medium
              estimatedTime:
                type: integer
                example: 129
                description: Estimated time to cook the meal in minutes.
              serves:
                type: number
                format: float
                example: 6
                minimum: 1
              ingredients:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
              cookingSteps:
                type: array
                items:
                  $ref: '#/components/schemas/CookingStep'
              badges:
                $ref: '#/components/schemas/Badges'

  /api/recipes/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: Recipe id
          required: true
          schema:
            type: string
            example: 507f1f77bcf86cd799439011
      responses:
        '200':
          description: Recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Recipe id
          required: true
          schema:
            type: string
            example: 507f1f77bcf86cd799439011
      responses:
        '200':
          description: Successful deletion of a recipe

  /api/recipes/{id}/rate:
    post:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Recipe id
          required: true
          schema:
            type: string
            example: 507f1f77bcf86cd799439011
        - in: path
          name: rating
          required: true
          schema:
            type: object
            properties:
              rating:
                type: integer
                maximum: 5
                minimum: 0
                example: 4
              difficulty:
                type: string
                enum: [very hard, hard, medium, easy, very easy]
                example: medium
              time:
                type: integer
                minimum: 0
                example: 123
              serves:
                type: integer
                minimum: 0
                example: 4
      responses:
        '200':
          description: Recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    tokenExample:
      value: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    idExample:
      value: 507f1f77bcf86cd799439011
    imageExample:
      value: https://picsum.photos/200
  schemas:
    Badges:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: 507f1f77bcf86cd799439011
          name:
            type: string
            example: Vegan
          icon:
            type: string
            example: https://picsum.photos/200

    Recipe:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        title:
          type: string
          example: Lasagna
        image:
          type: string
          example: https://picsum.photos/200
        date:
          type: string
          format: date
          example: 2022-02-28
        author:
          type: object
          properties:
            id:
              type: string
              example: 507f1f77bcf86cd799439011
            name:
              type: string
              example: David Bester
            image:
              type: string
              example: https://picsum.photos/200
        difficulty:
          type: string
          enum: [very hard, hard, medium, easy, very easy]
          example: medium
        estimatedTime:
          type: integer
          example: 129
          description: Estimated time to cook the meal in minutes.
        rating:
          type: number
          format: float
          example: 4.5
          maximum: 5
          minimum: 0
        serves:
          type: number
          format: float
          example: 6
          minimum: 1
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        cookingSteps:
          type: array
          items:
            $ref: '#/components/schemas/CookingStep'
        userRating:
          type: object
          properties:
            rating:
              type: integer
              maximum: 5
              minimum: 0
              example: 4
            difficulty:
              type: string
              enum: [very hard, hard, medium, easy, very easy]
              example: medium
            time:
              type: integer
              minimum: 0
              example: 123
            serves:
              type: integer
              minimum: 0
              example: 4
        badges:
          $ref: '#/components/schemas/Badges'
    Ingredient:
      type: object
      properties:
        name:
          type: string
          example: milk
        amount:
          type: number
          format: float
          example: 4
        unit:
          type: string
          example: dl
    CookingStep:
      type: object
      properties:
        title:
          type: string
          example: Preheat Oven
        intruction:
          type: string
          example: Preheat the oven to 180 degrees on fan mode.
        warning:
          type: string
          example: Make sure the oven is empty
        level:
          type: integer
          example: 0
        step:
          type: integer
          example: 12
